var M=(e,t,s)=>{if(!t.has(e))throw TypeError("Cannot "+s)};var i=(e,t,s)=>(M(e,t,"read from private field"),s?s.call(e):t.get(e)),c=(e,t,s)=>{if(t.has(e))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(e):t.set(e,s)},m=(e,t,s,r)=>(M(e,t,"write to private field"),r?r.call(e,s):t.set(e,s),s);var f=(e,t,s)=>(M(e,t,"access private method"),s);import{a2 as j,a3 as N,a4 as R,a5 as U,a6 as $,V as k,r as v,a7 as L,a8 as q,u as A,j as B,c as D}from"./index-0AK9WwZT.js";var u,l,a,n,y,E,O,g,w,I=(w=class extends j{constructor(t,s){super();c(this,y);c(this,O);c(this,u,void 0);c(this,l,void 0);c(this,a,void 0);c(this,n,void 0);m(this,u,t),this.setOptions(s),this.bindMethods(),f(this,y,E).call(this)}bindMethods(){this.mutate=this.mutate.bind(this),this.reset=this.reset.bind(this)}setOptions(t){var r;const s=this.options;this.options=i(this,u).defaultMutationOptions(t),N(this.options,s)||i(this,u).getMutationCache().notify({type:"observerOptionsUpdated",mutation:i(this,a),observer:this}),s!=null&&s.mutationKey&&this.options.mutationKey&&R(s.mutationKey)!==R(this.options.mutationKey)?this.reset():(r=i(this,a))==null||r.setOptions(this.options)}onUnsubscribe(){var t;this.hasListeners()||(t=i(this,a))==null||t.removeObserver(this)}onMutationUpdate(t){f(this,y,E).call(this),f(this,O,g).call(this,t)}getCurrentResult(){return i(this,l)}reset(){var t;(t=i(this,a))==null||t.removeObserver(this),m(this,a,void 0),f(this,y,E).call(this),f(this,O,g).call(this)}mutate(t,s){var r;return m(this,n,s),(r=i(this,a))==null||r.removeObserver(this),m(this,a,i(this,u).getMutationCache().build(i(this,u),this.options)),i(this,a).addObserver(this),i(this,a).execute(t)}},u=new WeakMap,l=new WeakMap,a=new WeakMap,n=new WeakMap,y=new WeakSet,E=function(){var s;const t=((s=i(this,a))==null?void 0:s.state)??U();m(this,l,{...t,isPending:t.status==="pending",isSuccess:t.status==="success",isError:t.status==="error",isIdle:t.status==="idle",mutate:this.mutate,reset:this.reset})},O=new WeakSet,g=function(t){$.batch(()=>{var s,r,o,d,h,p,S,C;if(i(this,n)&&this.hasListeners()){const b=i(this,l).variables,x=i(this,l).context;(t==null?void 0:t.type)==="success"?((r=(s=i(this,n)).onSuccess)==null||r.call(s,t.data,b,x),(d=(o=i(this,n)).onSettled)==null||d.call(o,t.data,null,b,x)):(t==null?void 0:t.type)==="error"&&((p=(h=i(this,n)).onError)==null||p.call(h,t.error,b,x),(C=(S=i(this,n)).onSettled)==null||C.call(S,void 0,t.error,b,x))}this.listeners.forEach(b=>{b(i(this,l))})})},w);function T(e,t){const s=k(t),[r]=v.useState(()=>new I(s,e));v.useEffect(()=>{r.setOptions(e)},[r,e]);const o=v.useSyncExternalStore(v.useCallback(h=>r.subscribe($.batchCalls(h)),[r]),()=>r.getCurrentResult(),()=>r.getCurrentResult()),d=v.useCallback((h,p)=>{r.mutate(h,p).catch(L)},[r]);if(o.error&&q(r.options.throwOnError,[o.error]))throw o.error;return{...o,mutate:d,mutateAsync:o.mutate}}const K=v.forwardRef(({bsPrefix:e,variant:t,animation:s="border",size:r,as:o="div",className:d,...h},p)=>{e=A(e,"spinner");const S=`${e}-${s}`;return B.jsx(o,{ref:p,...h,className:D(d,S,r&&`${S}-${r}`,t&&`text-${t}`)})});K.displayName="Spinner";const V=K;export{V as S,T as u};
