var M=(e,t,s)=>{if(!t.has(e))throw TypeError("Cannot "+s)};var r=(e,t,s)=>(M(e,t,"read from private field"),s?s.call(e):t.get(e)),l=(e,t,s)=>{if(t.has(e))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(e):t.set(e,s)},d=(e,t,s,i)=>(M(e,t,"write to private field"),i?i.call(e,s):t.set(e,s),s);var f=(e,t,s)=>(M(e,t,"access private method"),s);import{a5 as j,a6 as N,a7 as R,a8 as U,a9 as $,X as k,r as v,aa as L,u as q,j as A,c as B}from"./index-9oFfRMpt.js";var c,n,o,h,y,E,O,g,w,D=(w=class extends j{constructor(t,s){super();l(this,y);l(this,O);l(this,c,void 0);l(this,n,void 0);l(this,o,void 0);l(this,h,void 0);d(this,n,void 0),d(this,c,t),this.setOptions(s),this.bindMethods(),f(this,y,E).call(this)}bindMethods(){this.mutate=this.mutate.bind(this),this.reset=this.reset.bind(this)}setOptions(t){var i;const s=this.options;this.options=r(this,c).defaultMutationOptions(t),N(s,this.options)||r(this,c).getMutationCache().notify({type:"observerOptionsUpdated",mutation:r(this,o),observer:this}),(i=r(this,o))==null||i.setOptions(this.options),s!=null&&s.mutationKey&&this.options.mutationKey&&R(s.mutationKey)!==R(this.options.mutationKey)&&this.reset()}onUnsubscribe(){var t;this.hasListeners()||(t=r(this,o))==null||t.removeObserver(this)}onMutationUpdate(t){f(this,y,E).call(this),f(this,O,g).call(this,t)}getCurrentResult(){return r(this,n)}reset(){var t;(t=r(this,o))==null||t.removeObserver(this),d(this,o,void 0),f(this,y,E).call(this),f(this,O,g).call(this)}mutate(t,s){var i;return d(this,h,s),(i=r(this,o))==null||i.removeObserver(this),d(this,o,r(this,c).getMutationCache().build(r(this,c),this.options)),r(this,o).addObserver(this),r(this,o).execute(t)}},c=new WeakMap,n=new WeakMap,o=new WeakMap,h=new WeakMap,y=new WeakSet,E=function(){var s;const t=((s=r(this,o))==null?void 0:s.state)??U();d(this,n,{...t,isPending:t.status==="pending",isSuccess:t.status==="success",isError:t.status==="error",isIdle:t.status==="idle",mutate:this.mutate,reset:this.reset})},O=new WeakSet,g=function(t){$.batch(()=>{var s,i,a,p,u,b,S,C;if(r(this,h)&&this.hasListeners()){const m=r(this,n).variables,x=r(this,n).context;(t==null?void 0:t.type)==="success"?((i=(s=r(this,h)).onSuccess)==null||i.call(s,t.data,m,x),(p=(a=r(this,h)).onSettled)==null||p.call(a,t.data,null,m,x)):(t==null?void 0:t.type)==="error"&&((b=(u=r(this,h)).onError)==null||b.call(u,t.error,m,x),(C=(S=r(this,h)).onSettled)==null||C.call(S,void 0,t.error,m,x))}this.listeners.forEach(m=>{m(r(this,n))})})},w);function T(e,t){const s=k(t),[i]=v.useState(()=>new D(s,e));v.useEffect(()=>{i.setOptions(e)},[i,e]);const a=v.useSyncExternalStore(v.useCallback(u=>i.subscribe($.batchCalls(u)),[i]),()=>i.getCurrentResult(),()=>i.getCurrentResult()),p=v.useCallback((u,b)=>{i.mutate(u,b).catch(I)},[i]);if(a.error&&L(i.options.throwOnError,[a.error]))throw a.error;return{...a,mutate:p,mutateAsync:a.mutate}}function I(){}const K=v.forwardRef(({bsPrefix:e,variant:t,animation:s="border",size:i,as:a="div",className:p,...u},b)=>{e=q(e,"spinner");const S=`${e}-${s}`;return A.jsx(a,{ref:b,...u,className:B(p,S,i&&`${S}-${i}`,t&&`text-${t}`)})});K.displayName="Spinner";const X=K;export{X as S,T as u};
